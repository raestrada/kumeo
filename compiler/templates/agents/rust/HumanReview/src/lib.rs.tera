//! {{agent_name}} Agent for Kumeo - Human Review System

mod agent;
mod config;
mod review;

use kumeo_runtime::prelude::*;
use std::sync::Arc;

// Re-export the agent implementation
pub use agent::{{agent_name}}Agent;
pub use review::{ReviewRequest, ReviewResponse, ReviewStatus};

/// Create a new instance of the agent
pub fn create_agent(runtime: Arc<RuntimeClient>) -> Box<dyn Agent> {
    let config = config::load_config();
    Box::new({{agent_name}}Agent::new(config, runtime))
}

#[cfg(test)]
mod tests {
    use super::*;
    use kumeo_runtime::prelude::*;
    use std::sync::Arc;

    #[tokio::test]
    async fn test_agent_creation() {
        let runtime = Arc::new(RuntimeClient::new("test-human-review").await.unwrap());
        let _agent = create_agent(runtime);
        // Add your test assertions here
    }
}
